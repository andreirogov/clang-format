workflow:
  rules:
    # run job if pushed a tag
    - if: '$CI_COMMIT_TAG'

stages:
  - build
  - test

variables:
  # CI Registry Repository
  CI_REGISTRY_REPO: "docker.io/arogov/clang-format"
  # Shell print color codes
  OK_COL_CODE: '\e[0m'
  ERR_COL_CODE: '\e[31m'

build:
  stage: build
  rules:
    # run job if pushed a tag
    - if: '$CI_COMMIT_TAG'
  tags:
    - shared
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    # LLVM-compatible Alpine version
    ALPINE_TAG: "3.10"
    # LLVM version
    LLVM_TAG: "llvmorg-$CI_COMMIT_TAG"
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |-
      # Build
      /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg ALPINE_TAG=$ALPINE_TAG --build-arg LLVM_TAG=$LLVM_TAG \ 
        --destination "$CI_REGISTRY_REPO:$CI_COMMIT_TAG" --destination "$CI_REGISTRY_REPO:latest"

test:version:
  stage: test
  rules:
    # run job if pushed a tag
    - if: '$CI_COMMIT_TAG'
  tags:
    - shared
  image:
    name: "$CI_REGISTRY_REPO:$CI_COMMIT_TAG"
    entrypoint: [""]
  script:
    - |-
      if ! clang-format --version; then
        echo -e "${ERR_COL_CODE}Error running clang-format${OK_COL_CODE}"
        exit 1
      fi
      if ! clang-format --version | grep -qE "version $CI_COMMIT_TAG "; then
        echo -e "${ERR_COL_CODE}Invalid clang-format version${OK_COL_CODE}"
        exit 1
      fi
